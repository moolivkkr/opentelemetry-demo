apiVersion: v1
kind: ConfigMap
metadata:
  name: data-prepper-config
  namespace: otel-demo  # Ensure this matches the namespace used in opentelemetry-demo.yaml
data:
  ss4o_metrics.json: |
    {
      "index_patterns": [
        "ss4o_metrics-*-*"
      ],
      "template": {
        "mappings": {
          "_meta": {
            "version": "1.0.0",
            "catalog": "observability",
            "type": "metrics",
            "component": "metrics",
            "correlations" : [
              {
                "field": "spanId",
                "foreign-schema" : "traces",
                "foreign-field" : "spanId"
              },
              {
                "field": "traceId",
                "foreign-schema" : "traces",
                "foreign-field" : "traceId"
              }
            ]
          },
          "_source": {
            "enabled": true
          },
          "dynamic_templates": [
            {
              "exemplar_attributes_map": {
                "mapping": {
                  "type": "keyword"
                },
                "path_match": "exemplar.attributes.*"
              }
            },
            {
              "instrumentation_scope_attributes_map": {
                "mapping": {
                  "type": "keyword"
                },
                "path_match": "instrumentationScope.attributes.*"
              }
            }
          ],
          "properties": {
            "serviceName": {
              "type": "keyword"
            },
            "name": {
              "type": "keyword",
              "ignore_above": 256
            },
            "attributes": {
              "type": "object",
              "properties": {
                "data_stream": {
                  "properties": {
                    "dataset": {
                      "ignore_above": 128,
                      "type": "keyword"
                    },
                    "namespace": {
                      "ignore_above": 128,
                      "type": "keyword"
                    },
                    "type": {
                      "ignore_above": 56,
                      "type": "keyword"
                    }
                  }
                }
              }
            },
            "description": {
              "type": "text",
              "fields": {
                "keyword": {
                  "type": "keyword",
                  "ignore_above": 256
                }
              }
            },
            "unit": {
              "type": "keyword",
              "ignore_above": 128
            },
            "kind": {
              "type": "keyword",
              "ignore_above": 128
            },
            "aggregationTemporality": {
              "type": "keyword",
              "ignore_above": 128
            },
            "monotonic": {
              "type": "boolean"
            },
            "startTime": {
              "type": "date"
            },
            "@timestamp": {
              "type": "date"
            },
            "observedTimestamp": {
              "type": "date_nanos"
            },
            "value@int": {
              "type": "integer"
            },
            "value@double": {
              "type": "double"
            },
            "buckets": {
              "type" : "nested",
              "properties": {
                "count": {
                  "type": "long"
                },
                "sum": {
                  "type": "double"
                },
                "max": {
                  "type": "float"
                },
                "min": {
                  "type": "float"
                }
              }
            },
            "bucketCount": {
              "type": "long"
            },
            "bucketCountsList": {
              "type": "long"
            },
            "explicitBoundsList": {
              "type": "float"
            },
            "explicitBoundsCount": {
              "type": "float"
            },
            "quantiles": {
              "properties": {
                "quantile": {
                  "type": "double"
                },
                "value": {
                  "type": "double"
                }
              }
            },
            "quantileValuesCount": {
              "type": "long"
            },
            "positiveBuckets": {
              "type" : "nested",
              "properties": {
                "count": {
                  "type": "long"
                },
                "max": {
                  "type": "float"
                },
                "min": {
                  "type": "float"
                }
              }
            },
            "negativeBuckets": {
              "type" : "nested",
              "properties": {
                "count": {
                  "type": "long"
                },
                "max": {
                  "type": "float"
                },
                "min": {
                  "type": "float"
                }
              }
            },
            "negativeOffset": {
              "type": "integer"
            },
            "positiveOffset": {
              "type": "integer"
            },
            "zeroCount": {
              "type": "long"
            },
            "scale": {
              "type": "long"
            },
            "max": {
              "type": "float"
            },
            "min": {
              "type": "float"
            },
            "sum": {
              "type": "float"
            },
            "count": {
              "type": "long"
            },
            "exemplar": {
              "properties": {
                "time": {
                  "type": "date"
                },
                "traceId": {
                  "ignore_above": 256,
                  "type": "keyword"
                },
                "serviceName": {
                  "ignore_above": 256,
                  "type": "keyword"
                },
                "spanId": {
                  "ignore_above": 256,
                  "type": "keyword"
                }
              }
            },
            "instrumentationScope": {
              "properties": {
                "name": {
                  "type": "keyword",
                  "ignore_above": 256
                },
                "version": {
                  "type": "keyword",
                  "ignore_above": 256
                },
                "droppedAttributesCount": {
                  "type": "integer"
                },
                "schemaUrl": {
                  "type": "text",
                  "fields": {
                    "keyword": {
                      "type": "keyword",
                      "ignore_above": 256
                    }
                  }
                }
              }
            },
            "schemaUrl": {
              "type": "text",
              "fields": {
                "keyword": {
                  "type": "keyword",
                  "ignore_above": 256
                }
              }
            }
          }
        },
        "aliases" : {
          "otel-metrics-" : {}
        },
        "settings": {
          "index": {
            "mapping": {
              "total_fields": {
                "limit": 10000
              }
            },
            "refresh_interval": "5s"
          }
        }
      },
      "composed_of": [],
      "version": 1,
      "_meta": {
        "description": "Observability Metrics Mapping Template",
        "catalog": "observability",
        "type": "metrics",
        "correlations" : [
          {
            "field": "spanId",
            "foreign-schema" : "traces",
            "foreign-field" : "spanId"
          },
          {
            "field": "traceId",
            "foreign-schema" : "traces",
            "foreign-field" : "traceId"
          }
        ]
      }
    }
  ss4o_logs.json: |
    {
      "index_patterns": ["ss4o_logs-*-*"],
      "priority": 900,
      "template": {
        "mappings": {
          "_meta": {
            "version": "1.0.0",
            "catalog": "observability",
            "type": "logs",
            "component": "log",
            "correlations": [
              {
                "field": "spanId",
                "foreign-schema": "traces",
                "foreign-field": "spanId"
              },
              {
                "field": "traceId",
                "foreign-schema": "traces",
                "foreign-field": "traceId"
              }
            ]
          },
          "_source": {
            "enabled": true
          },
          "dynamic_templates": [
            {
              "instrumentation_scope_attributes_map": {
                "mapping": {
                  "type": "keyword"
                },
                "path_match": "instrumentationScope.attributes.*"
              }
            }
          ],
          "properties": {
            "severity": {
              "properties": {
                "number": {
                  "type": "long"
                },
                "text": {
                  "type": "text",
                  "fields": {
                    "keyword": {
                      "type": "keyword",
                      "ignore_above": 256
                    }
                  }
                }
              }
            },
            "attributes": {
              "type": "object",
              "properties": {
                "data_stream": {
                  "properties": {
                    "dataset": {
                      "ignore_above": 128,
                      "type": "keyword"
                    },
                    "namespace": {
                      "ignore_above": 128,
                      "type": "keyword"
                    },
                    "type": {
                      "ignore_above": 56,
                      "type": "keyword"
                    }
                  }
                }
              }
            },
            "body": {
              "type": "text"
            },
            "@message": {
              "type": "alias",
              "path": "body"
            },
            "@timestamp": {
              "type": "date"
            },
            "observedTimestamp": {
              "type": "date"
            },
            "observerTime": {
              "type": "alias",
              "path": "observedTimestamp"
            },
            "traceId": {
              "ignore_above": 256,
              "type": "keyword"
            },
            "spanId": {
              "ignore_above": 256,
              "type": "keyword"
            },
            "schemaUrl": {
              "type": "text",
              "fields": {
                "keyword": {
                  "type": "keyword",
                  "ignore_above": 256
                }
              }
            },
            "instrumentationScope": {
              "properties": {
                "name": {
                  "type": "text",
                  "fields": {
                    "keyword": {
                      "type": "keyword",
                      "ignore_above": 128
                    }
                  }
                },
                "version": {
                  "type": "text",
                  "fields": {
                    "keyword": {
                      "type": "keyword",
                      "ignore_above": 256
                    }
                  }
                },
                "dropped_attributes_count": {
                  "type": "integer"
                },
                "schemaUrl": {
                  "type": "text",
                  "fields": {
                    "keyword": {
                      "type": "keyword",
                      "ignore_above": 256
                    }
                  }
                }
              }
            },
            "event": {
              "properties": {
                "domain": {
                  "ignore_above": 256,
                  "type": "keyword"
                },
                "name": {
                  "ignore_above": 256,
                  "type": "keyword"
                },
                "source": {
                  "ignore_above": 256,
                  "type": "keyword"
                },
                "category": {
                  "ignore_above": 256,
                  "type": "keyword"
                },
                "type": {
                  "ignore_above": 256,
                  "type": "keyword"
                },
                "kind": {
                  "ignore_above": 256,
                  "type": "keyword"
                },
                "result": {
                  "ignore_above": 256,
                  "type": "keyword"
                },
                "exception": {
                  "properties": {
                    "message": {
                      "ignore_above": 1024,
                      "type": "keyword"
                    },
                    "type": {
                      "ignore_above": 256,
                      "type": "keyword"
                    },
                    "stacktrace": {
                      "type": "text"
                    }
                  }
                }
              }
            }
          }
        },
        "settings": {
          "index": {
            "mapping": {
              "total_fields": {
                "limit": 10000
              }
            },
            "refresh_interval": "5s"
          }
        },
        "aliases" : {
          "otel-events-" : {}
        }
      },
      "composed_of": [],
      "version": 1
    }
  ss4o_traces.json: |
    {
      "index_patterns": [
        "ss4o_traces-*-*"
      ],
      "template": {
        "mappings": {
          "_meta": {
            "version": "1.0.0",
            "catalog": "observability",
            "type": "traces",
            "component": "trace",
            "correlations": [
              {
                "field": "serviceName",
                "foreign-schema": "services",
                "foreign-field": "spanId"
              }
            ]
          },
          "dynamic_templates": [
            {
              "events_attributes_map": {
                "mapping": {
                  "type": "keyword"
                },
                "path_match": "events.attributes.*"
              }
            },
            {
              "links_attributes_map": {
                "mapping": {
                  "type": "keyword"
                },
                "path_match": "links.attributes.*"
              }
            },
            {
              "instrumentation_scope_attributes_map": {
                "mapping": {
                  "type": "keyword"
                },
                "path_match": "instrumentationScope.attributes.*"
              }
            }
          ],
          "_source": {
            "enabled": true
          },
          "properties": {
            "traceId": {
              "ignore_above": 256,
              "type": "keyword"
            },
            "spanId": {
              "ignore_above": 256,
              "type": "keyword"
            },
            "traceState": {
              "type": "text",
              "fields": {
                "keyword": {
                  "type": "keyword",
                  "ignore_above": 256
                }
              }
            },
            "parentSpanId": {
              "ignore_above": 256,
              "type": "keyword"
            },
            "name": {
              "ignore_above": 1024,
              "type": "keyword"
            },
            "kind": {
              "ignore_above": 128,
              "type": "keyword"
            },
            "startTime": {
              "type": "date_nanos"
            },
            "endTime": {
              "type": "date_nanos"
            },
            "droppedAttributesCount": {
              "type": "long"
            },
            "droppedEventsCount": {
              "type": "long"
            },
            "droppedLinksCount": {
              "type": "long"
            },
            "status": {
              "properties": {
                "code": {
                  "type": "long"
                },
                "message": {
                  "ignore_above": 128,
                  "type": "keyword"
                }
              }
            },
            "attributes": {
              "type": "object",
              "properties": {
                "serviceName": {
                  "type": "keyword"
                },
                "data_stream": {
                  "properties": {
                    "dataset": {
                      "ignore_above": 128,
                      "type": "keyword"
                    },
                    "namespace": {
                      "ignore_above": 128,
                      "type": "keyword"
                    },
                    "type": {
                      "ignore_above": 56,
                      "type": "keyword"
                    }
                  }
                }
              }
            },
            "events": {
              "type": "nested",
              "properties": {
                "name": {
                  "ignore_above": 1024,
                  "type": "keyword"
                },
                "@timestamp": {
                  "type": "date_nanos"
                },
                "observedTimestamp": {
                  "type": "date_nanos"
                }
              }
            },
            "links": {
              "type": "nested",
              "properties": {
                "traceId": {
                  "ignore_above": 256,
                  "type": "keyword"
                },
                "spanId": {
                  "ignore_above": 256,
                  "type": "keyword"
                },
                "traceState": {
                  "type": "text",
                  "fields": {
                    "keyword": {
                      "type": "keyword",
                      "ignore_above": 256
                    }
                  }
                }
              }
            },
            "instrumentationScope": {
              "properties": {
                "name": {
                  "type": "keyword"
                },
                "version": {
                  "type": "keyword"
                },
                "droppedAttributesCount": {
                  "type": "integer"
                },
                "schemaUrl": {
                  "type": "keyword"
                }
              }
            },
            "schemaUrl": {
              "type": "keyword"
            }
          }
        },
        "aliases" : {
          "otel-v1-apm-span" : {}
        }
      },
      "composed_of": [],
      "version": 1,
      "_meta": {
        "description": "Observability Traces Mapping Template",
        "catalog": "observability",
        "type": "traces",
        "correlations": [
          {
            "field": "serviceName",
            "foreign-schema": "services",
            "foreign-field": "serviceName"
          }
        ]
      }
    }
  pipelines.yaml: |
    # Copyright The OpenTelemetry Authors
    # SPDX-License-Identifier: Apache-2.0

    otel-logs-pipeline:
      workers: 5
      delay: 10
      source:
        otel_logs_source:
          ssl: false
      buffer:
        bounded_blocking:
      sink:
        - opensearch:
            hosts: ["open-search:9200"]
            username: "admin"
            password: "MyPassw0rd123#"
            insecure: false
            index_type: custom
            index: otel-events-%{yyyy.MM.dd}
            bulk_size: 4

    entry-pipeline:
      delay: "100"
      source:
        otel_trace_source:
          ssl: false
      sink:
        - pipeline:
            name: "raw-pipeline"
        - pipeline:
            name: "service-map-pipeline"

    raw-pipeline:
      source:
        pipeline:
          name: "entry-pipeline"
      processor:
        - otel_trace_raw:
      sink:
        - opensearch:
            hosts: ["open-search:9200"]
            username: "admin"
            password: "MyPassw0rd123#"
            insecure: false        
            index_type: custom
            index: otel-traces-%{yyyy.MM.dd}
            bulk_size: 4

    service-map-pipeline:
      delay: "100"
      source:
        pipeline:
          name: "entry-pipeline"
      processor:
        - service_map_stateful:
      sink:
        - opensearch:
            hosts: ["open-search:9200"]
            username: "admin"
            password: "MyPassw0rd123#"
            insecure: false
            index_type: trace-analytics-service-map
          
    otel-metrics-pipeline:
      workers: 8
      delay: 3000
      source:
        otel_metrics_source:
          health_check_service: true
          ssl: false
      buffer:
        bounded_blocking:
          buffer_size: 1024 # max number of records the buffer accepts
          batch_size: 1024 # max number of records the buffer drains after each read
      processor:
        - otel_metrics:
            calculate_histogram_buckets: true
            calculate_exponential_histogram_buckets: true
            exponential_histogram_max_allowed_scale: 10
            flatten_attributes: false
      sink:
        - opensearch:
            hosts: ["open-search:9200"]
            username: "admin"
            password: "MyPassw0rd123#"
            insecure: false
            index_type: custom
            index: ss4o_metrics-otel-%{yyyy.MM.dd}
            bulk_size: 4
            template_type: index-template
            template_content: >
              {
                "index_patterns": [
                  "ss4o_metrics-*-*"
                ],
                "template": {
                  "mappings": {
                    "_meta": {
                      "version": "1.0.0",
                      "catalog": "observability",
                      "type": "metrics",
                      "component": "metrics",
                      "correlations" : [
                        {
                          "field": "spanId",
                          "foreign-schema" : "traces",
                          "foreign-field" : "spanId"
                        },
                        {
                          "field": "traceId",
                          "foreign-schema" : "traces",
                          "foreign-field" : "traceId"
                        }
                      ]
                    },
                    "_source": {
                      "enabled": true
                    },
                    "dynamic_templates": [
                      {
                        "exemplar_attributes_map": {
                          "mapping": {
                            "type": "keyword"
                          },
                          "path_match": "exemplar.attributes.*"
                        }
                      },
                      {
                        "instrumentation_scope_attributes_map": {
                          "mapping": {
                            "type": "keyword"
                          },
                          "path_match": "instrumentationScope.attributes.*"
                        }
                      }
                    ],
                    "properties": {
                      "serviceName": {
                        "type": "keyword"
                      },
                      "name": {
                        "type": "keyword",
                        "ignore_above": 256
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "data_stream": {
                            "properties": {
                              "dataset": {
                                "ignore_above": 128,
                                "type": "keyword"
                              },
                              "namespace": {
                                "ignore_above": 128,
                                "type": "keyword"
                              },
                              "type": {
                                "ignore_above": 56,
                                "type": "keyword"
                              }
                            }
                          }
                        }
                      },
                      "description": {
                        "type": "text",
                        "fields": {
                          "keyword": {
                            "type": "keyword",
                            "ignore_above": 256
                          }
                        }
                      },
                      "unit": {
                        "type": "keyword",
                        "ignore_above": 128
                      },
                      "kind": {
                        "type": "keyword",
                        "ignore_above": 128
                      },
                      "aggregationTemporality": {
                        "type": "keyword",
                        "ignore_above": 128
                      },
                      "monotonic": {
                        "type": "boolean"
                      },
                      "startTime": {
                        "type": "date"
                      },
                      "@timestamp": {
                        "type": "date"
                      },
                      "observedTimestamp": {
                        "type": "date_nanos"
                      },
                      "value@int": {
                        "type": "integer"
                      },
                      "value@double": {
                        "type": "double"
                      },
                      "buckets": {
                        "type" : "nested",
                        "properties": {
                          "count": {
                            "type": "long"
                          },
                          "sum": {
                            "type": "double"
                          },
                          "max": {
                            "type": "float"
                          },
                          "min": {
                            "type": "float"
                          }
                        }
                      },
                      "bucketCount": {
                        "type": "long"
                      },
                      "bucketCountsList": {
                        "type": "long"
                      },
                      "explicitBoundsList": {
                        "type": "float"
                      },
                      "explicitBoundsCount": {
                        "type": "float"
                      },
                      "quantiles": {
                        "properties": {
                          "quantile": {
                            "type": "double"
                          },
                          "value": {
                            "type": "double"
                          }
                        }
                      },
                      "quantileValuesCount": {
                        "type": "long"
                      },
                      "positiveBuckets": {
                        "type" : "nested",
                        "properties": {
                          "count": {
                            "type": "long"
                          },
                          "max": {
                            "type": "float"
                          },
                          "min": {
                            "type": "float"
                          }
                        }
                      },
                      "negativeBuckets": {
                        "type" : "nested",
                        "properties": {
                          "count": {
                            "type": "long"
                          },
                          "max": {
                            "type": "float"
                          },
                          "min": {
                            "type": "float"
                          }
                        }
                      },
                      "negativeOffset": {
                        "type": "integer"
                      },
                      "positiveOffset": {
                        "type": "integer"
                      },
                      "zeroCount": {
                        "type": "long"
                      },
                      "scale": {
                        "type": "long"
                      },
                      "max": {
                        "type": "float"
                      },
                      "min": {
                        "type": "float"
                      },
                      "sum": {
                        "type": "float"
                      },
                      "count": {
                        "type": "long"
                      },
                      "exemplar": {
                        "properties": {
                          "time": {
                            "type": "date"
                          },
                          "traceId": {
                            "ignore_above": 256,
                            "type": "keyword"
                          },
                          "serviceName": {
                            "ignore_above": 256,
                            "type": "keyword"
                          },
                          "spanId": {
                            "ignore_above": 256,
                            "type": "keyword"
                          }
                        }
                      },
                      "instrumentationScope": {
                        "properties": {
                          "name": {
                            "type": "keyword",
                            "ignore_above": 256
                          },
                          "version": {
                            "type": "keyword",
                            "ignore_above": 256
                          },
                          "droppedAttributesCount": {
                            "type": "integer"
                          },
                          "schemaUrl": {
                            "type": "text",
                            "fields": {
                              "keyword": {
                                "type": "keyword",
                                "ignore_above": 256
                              }
                            }
                          }
                        }
                      },
                      "schemaUrl": {
                        "type": "text",
                        "fields": {
                          "keyword": {
                            "type": "keyword",
                            "ignore_above": 256
                          }
                        }
                      }
                    }
                  },
                  "aliases" : {
                    "otel-metrics-" : {}
                  },
                  "settings": {
                    "index": {
                      "mapping": {
                        "total_fields": {
                          "limit": 10000
                        }
                      },
                      "refresh_interval": "5s"
                    }
                  }
                },
                "composed_of": [],
                "version": 1,
                "_meta": {
                  "description": "Observability Metrics Mapping Template",
                  "catalog": "observability",
                  "type": "metrics",
                  "correlations" : [
                    {
                      "field": "spanId",
                      "foreign-schema" : "traces",
                      "foreign-field" : "spanId"
                    },
                    {
                      "field": "traceId",
                      "foreign-schema" : "traces",
                      "foreign-field" : "traceId"
                    }
                  ]
                }
              }
  data-prepper-config.yaml: |
    # SPDX-License-Identifier: Apache-2.0

    ssl: false
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-prepper
  namespace: otel-demo  # Ensure this matches the namespace used in opentelemetry-demo.yaml
spec:
  replicas: 1
  selector:
    matchLabels:
      app: data-prepper
  template:
    metadata:
      labels:
        app: data-prepper
    spec:
      containers:
      - name: data-prepper
        image: ${DATA_PREPPER_IMAGE}
        resources:
          requests:
            memory: "2Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "1"
        volumeMounts:
          - mountPath: /usr/share/data-prepper/templates/ss4o_metrics.json
            name: ss4o-metrics
            subPath: ss4o_metrics.json
          - mountPath: /usr/share/data-prepper/templates/ss4o_logs.json
            name: ss4o-logs
            subPath: ss4o_logs.json
          - mountPath: /usr/share/data-prepper/templates/ss4o_traces.json
            name: ss4o-traces
            subPath: ss4o_traces.json
          - mountPath: /usr/share/data-prepper/pipelines/pipelines.yaml
            name: pipelines
            subPath: pipelines.yaml
          - mountPath: /usr/share/data-prepper/config/data-prepper-config.yaml
            name: data-prepper-config
            subPath: data-prepper-config.yaml
        ports:
          - containerPort: ${DATA_PREPPER_TRACES_PORT}
          - containerPort: ${DATA_PREPPER_METRICS_PORT}
          - containerPort: ${DATA_PREPPER_LOGS_PORT}
      volumes:
        - name: ss4o-metrics
          configMap:
            name: data-prepper-config
            items:
              - key: ss4o_metrics.json
                path: ss4o_metrics.json
        - name: ss4o-logs
          configMap:
            name: data-prepper-config
            items:
              - key: ss4o_logs.json
                path: ss4o_logs.json
        - name: ss4o-traces
          configMap:
            name: data-prepper-config
            items:
              - key: ss4o_traces.json
                path: ss4o_traces.json
        - name: pipelines
          configMap:
            name: data-prepper-config
            items:
              - key: pipelines.yaml
                path: pipelines.yaml
        - name: data-prepper-config
          configMap:
            name: data-prepper-config
            items:
              - key: data-prepper-config.yaml
                path: data-prepper-config.yaml
---
apiVersion: v1
kind: Service
metadata:
  name: data-prepper-service
  namespace: otel-demo  # Ensure this matches the namespace used in opentelemetry-demo.yaml
spec:
  selector:
    app: data-prepper
  ports:
    - protocol: TCP
      port: ${DATA_PREPPER_TRACES_PORT}
      targetPort: ${DATA_PREPPER_TRACES_PORT}
      name: tracesport      
    - protocol: TCP
      port: ${DATA_PREPPER_METRICS_PORT}
      targetPort: ${DATA_PREPPER_METRICS_PORT}
      name: metricsport     
    - protocol: TCP
      port: ${DATA_PREPPER_LOGS_PORT}
      targetPort: ${DATA_PREPPER_LOGS_PORT}
      name: logsport     